services:
  #Broker numero 1
  kafka1:
    image: "bitnami/kafka:latest"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka1:9093,1@kafka2:9093,2@kafka3:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LOG4J_LOGGERS="kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    ports:
      - "9092:9092"
      - "9093:9093"

  kafka-topics-creator:
    image: bitnami/kafka:latest
    depends_on:
      - kafka1
    command: >
      bash -c
        "kafka-topics.sh
          --create
          --bootstrap-server kafka1:9092
          --topic test
          --partitions 3
          --replication-factor 3"

  producer:
    image: node:14
    volumes:
      - type: bind
        source: ./producer
        target: /app
    working_dir: /app
    command: node producer.js
    depends_on:
      - kafka1

  consumer:
    image: node:14
    volumes:
      - type: bind
        source: ./consumer
        target: /app
    working_dir: /app
    command: node consumer.js
    depends_on:
      - kafka1
      - kafka-topics-creator